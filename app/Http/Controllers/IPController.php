<?php

namespace App\Http\Controllers;

use App\IP;
use App\Equipment;
use Illuminate\Http\Request;

use Auth;
class IPController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
//
        //
        $ips = IP::all()->sortBy( function($IP) { return ip2long( $IP->ip); });
//        if ( request('json') ) {
//            return $IP;
//        } else {
        return view('ip.index', compact('ips'));
//        }
    }

    public function rebuildDNS()
    {
//
        //
        $ips = IP::all()->sortBy( function($IP) { return ip2long( $IP->ip); });
        foreach( $ips as $ip ) {
            if ( $ip->dns != "" ) {

                $ip->removeDNS();
                $ip->updateDNS();
                print $ip->ip . "<br>";

            }
        }
//        if ( request('json') ) {
//            return $IP;
//        } else {
//        return view('ip.index', compact('ips'));
//        }
        print "complete";
//        return redirect("/dns-zones/");

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
//        $authOK = false;
        $user = Auth::user();
//
//        if ( $user->can('create ip') ) {
//            $authOK = true;
//        }
//
//        if ( $authOK ) {
//        } else {
//            return view('common.denied');
//        }
        $ip = new \App\IP();
        $ip->user_id = $user->id;

        return view('ip.create', ['ip' => $ip ,'equipments' => \App\Equipment::all()->sortBy('hostname') , 'sites' => \App\Site::all(), 'users' => \App\User::all() ]);

    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        // TODO: Permission Checking


        $request['mac_address'] = preg_replace("/[^a-f0-9A-F]+/", "", $request['mac_address']);


        if ($request['id'] ) {
            $IP = \App\IP::find($request['id']);



            $IP->update($request->all());

            // Add DNS Back with changes
            if ( $IP->dns != "" ) {
                $IP->updateDNS();
            }

        } else {
            $IP = \App\IP::create(
                $request->all()
            );

            // Create DNS
            if ( $IP->dns != "" ) {
                $IP->updateDNS();
            }
        }


        return redirect("/ips/" . $IP->id);
    }





    public function __call($method, $parameters)
    {
        parent::__call($method, $parameters); // TODO: Change the autogenerated stub
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\IP  $IP
     * @return \Illuminate\Http\Response
     */
    public function show(IP $ip)
    {
        //
        return view('ip.show', compact('ip'));

    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\IP  $IP
     * @return \Illuminate\Http\Response
     */
    public function edit(IP $ip)
    {
        //
        return view('ip.edit', ['ip' => $ip ,'equipments' => \App\Equipment::all(), 'sites' => \App\Site::all(), 'users' => \App\User::all() ]);

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\IP  $IP
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, IP $IP)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\IP  $IP
     * @return \Illuminate\Http\Response
     */
    public function destroy(IP $IP)
    {
        //
    }
}
